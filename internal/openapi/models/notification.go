// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Notification notification
//
// swagger:model Notification
type Notification struct {

	// amount
	Amount int64 `json:"Amount,omitempty"`

	// card Id
	CardID int64 `json:"CardId,omitempty"`

	// error code
	ErrorCode string `json:"ErrorCode,omitempty"`

	// exp date
	ExpDate string `json:"ExpDate,omitempty"`

	// order Id
	OrderID string `json:"OrderId,omitempty"`

	// pan
	Pan string `json:"Pan,omitempty"`

	// payment Id
	PaymentID int64 `json:"PaymentId,omitempty"`

	// status
	Status string `json:"Status,omitempty"`

	// success
	Success bool `json:"Success,omitempty"`

	// terminal key
	TerminalKey string `json:"TerminalKey,omitempty"`

	// token
	Token string `json:"Token,omitempty"`
}

// Validate validates this notification
func (m *Notification) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this notification based on context it is used
func (m *Notification) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Notification) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Notification) UnmarshalBinary(b []byte) error {
	var res Notification
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
