swagger: "2.0"
info:
  description: "microservice for the sbp pay system of self-service car washes"
  title: wash-sbp
  version: 1.0.0
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
securityDefinitions:
  authKey:
    description: Session token inside Authorization header.
    type: apiKey
    in: header
    name: Authorization
security:
  - authKey: []
paths:

  /signup:
    post:
      tags:
        - wash_servers
      security:
        - {}
      operationId: signup
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/FirebaseToken"

  /notification:
    post:
      tags:
        - wash_servers
      security:
        - {}
      operationId: notification
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Notification"
      responses:
        200:
          description: OK
          schema:
            type: string
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/error"
            
  /health_check:
    get:
      tags:
        - Standard
      security:
        - {}
      operationId: healthCheck
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              ok:
                type: boolean

  /wash-server/{id}:
    get:
      tags:
        - wash_servers
      security:
        - authKey: []
      operationId: getWashServer
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/WashServer"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/error"
        404:
          description: WashServer not exists
          schema:
            $ref: "#/definitions/error"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/error"

  /wash-server/:
    put:
      tags:
        - wash_servers
      security:
        - authKey: []
      operationId: create
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/WashServerCreate"
      responses:
        200:
          description: Success creation
          schema:
            $ref: "#/definitions/WashServer"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/error"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/error"
    patch:
      tags:
        - wash_servers
      security:
        - authKey: []
      operationId: update
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/WashServerUpdate"
      responses:
        204:
          description: Success update
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/error"
        404:
          description: WashServer not exists
          schema:
            $ref: "#/definitions/error"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/error"
    delete:
      tags:
        - wash_servers
      security:
        - authKey: []
      operationId: delete
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/WashServerDelete"
      responses:
        204:
          description: OK
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/error"
        404:
          description: WashServer not exists
          schema:
            $ref: "#/definitions/error"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/error"

  /wash-server/list:
    get:
      tags:
        - wash_servers
      security:
        - authKey: []
      operationId: list
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Pagination"
      responses:
        200:
          description: OK
          schema:
            type: array
            items: 
              $ref: "#/definitions/WashServer"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/error"
        404:
          description: WashServer not exists
          schema:
            $ref: "#/definitions/error"
        500:
          description: Internal error
          schema:
            $ref: "#/definitions/error"

  /pay:
    post:
      tags:
        - wash_servers
      security:
        - authKey: []
      operationId: pay
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Pay"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/payResponse"
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/error"

  /cancel:
    post:
      tags:
        - wash_servers
      security:
        - authKey: []
      operationId: cancel
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/cancel"
      responses:
        200:
          description: OK
        400:
          description: Bad request
          schema:
            $ref: "#/definitions/error"


definitions:
  cancel:
    type: object
    properties:
      orderID:
        type: string


  payResponse:
    type: object
    properties:
      url:
        type: string
      orderID:
        type: string

  Pay:
    type: object
    properties:
      serverId:
        type: string
      postId:
        type: string
      amount:
        type: integer

  error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        description: Either same as HTTP Status Code OR >= 600.
        type: integer
        format: int32
      message:
        type: string

  WashServer:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      service_key:
        type: string
      terminal_key:
        type: string
      terminal_password:
        type: string

  WashServerCreate:
    properties:
      name:
        type: string
      description:
        type: string 
      terminal_key:
        type: string
      terminal_password:
        type: string
    required:
      - name

  WashServerUpdate:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      terminal_key:
        type: string
      terminal_password:
        type: string

  WashServerDelete:
    type: object
    properties:
      id:
        type: string
    required:
      - id

  Notification:
    type: object
    properties:
      TerminalKey:
        type: string
      OrderId:
        type: string
      Success:
        type: boolean
      Status:
        type: string
      PaymentId:
        type: integer
      ErrorCode:
        type: string
      Amount:
        type: integer
      CardId:
        type: integer
      Pan:
        type: string
      ExpDate:
        type: string
      Token:
        type: string 

  Pagination:
    type: object
    properties: 
      limit:
        type: integer
        format: int64
        maximum: 100
      offset:
        type: integer
        format: int64

  FirebaseToken:
    type: object
    properties: 
      value:
        type: string
