// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SetUserPermsReader is a Reader for the SetUserPerms structure.
type SetUserPermsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetUserPermsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSetUserPermsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewSetUserPermsNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetUserPermsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetUserPermsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSetUserPermsCreated creates a SetUserPermsCreated with default headers values
func NewSetUserPermsCreated() *SetUserPermsCreated {
	return &SetUserPermsCreated{}
}

/* SetUserPermsCreated describes a response with status code 201, with default header values.

ok
*/
type SetUserPermsCreated struct {
}

func (o *SetUserPermsCreated) Error() string {
	return fmt.Sprintf("[PUT /api/permissions/{vhost}/{user_id}][%d] setUserPermsCreated ", 201)
}

func (o *SetUserPermsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetUserPermsNoContent creates a SetUserPermsNoContent with default headers values
func NewSetUserPermsNoContent() *SetUserPermsNoContent {
	return &SetUserPermsNoContent{}
}

/* SetUserPermsNoContent describes a response with status code 204, with default header values.

ok
*/
type SetUserPermsNoContent struct {
}

func (o *SetUserPermsNoContent) Error() string {
	return fmt.Sprintf("[PUT /api/permissions/{vhost}/{user_id}][%d] setUserPermsNoContent ", 204)
}

func (o *SetUserPermsNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetUserPermsBadRequest creates a SetUserPermsBadRequest with default headers values
func NewSetUserPermsBadRequest() *SetUserPermsBadRequest {
	return &SetUserPermsBadRequest{}
}

/* SetUserPermsBadRequest describes a response with status code 400, with default header values.

bad request
*/
type SetUserPermsBadRequest struct {
}

func (o *SetUserPermsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api/permissions/{vhost}/{user_id}][%d] setUserPermsBadRequest ", 400)
}

func (o *SetUserPermsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetUserPermsInternalServerError creates a SetUserPermsInternalServerError with default headers values
func NewSetUserPermsInternalServerError() *SetUserPermsInternalServerError {
	return &SetUserPermsInternalServerError{}
}

/* SetUserPermsInternalServerError describes a response with status code 500, with default header values.

error
*/
type SetUserPermsInternalServerError struct {
}

func (o *SetUserPermsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api/permissions/{vhost}/{user_id}][%d] setUserPermsInternalServerError ", 500)
}

func (o *SetUserPermsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
