// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ResponseCancel response cancel
//
// swagger:model ResponseCancel
type ResponseCancel struct {

	// details
	Details string `json:"Details,omitempty"`

	// error code
	ErrorCode string `json:"ErrorCode,omitempty"`

	// message
	Message string `json:"Message,omitempty"`

	// new amount
	NewAmount int64 `json:"NewAmount,omitempty"`

	// order Id
	OrderID string `json:"OrderId,omitempty"`

	// original amount
	OriginalAmount int64 `json:"OriginalAmount,omitempty"`

	// payment Id
	PaymentID string `json:"PaymentId,omitempty"`

	// status
	Status string `json:"Status,omitempty"`

	// success
	Success bool `json:"Success,omitempty"`

	// terminal key
	TerminalKey string `json:"TerminalKey,omitempty"`
}

// Validate validates this response cancel
func (m *ResponseCancel) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this response cancel based on context it is used
func (m *ResponseCancel) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResponseCancel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResponseCancel) UnmarshalBinary(b []byte) error {
	var res ResponseCancel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
