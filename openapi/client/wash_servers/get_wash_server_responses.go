// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"sbp/openapi/models"
)

// GetWashServerReader is a Reader for the GetWashServer structure.
type GetWashServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWashServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWashServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWashServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWashServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWashServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /wash-server/{id}] getWashServer", response, response.Code())
	}
}

// NewGetWashServerOK creates a GetWashServerOK with default headers values
func NewGetWashServerOK() *GetWashServerOK {
	return &GetWashServerOK{}
}

/*
GetWashServerOK describes a response with status code 200, with default header values.

OK
*/
type GetWashServerOK struct {
	Payload *models.WashServer
}

// IsSuccess returns true when this get wash server o k response has a 2xx status code
func (o *GetWashServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get wash server o k response has a 3xx status code
func (o *GetWashServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash server o k response has a 4xx status code
func (o *GetWashServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wash server o k response has a 5xx status code
func (o *GetWashServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get wash server o k response a status code equal to that given
func (o *GetWashServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get wash server o k response
func (o *GetWashServerOK) Code() int {
	return 200
}

func (o *GetWashServerOK) Error() string {
	return fmt.Sprintf("[GET /wash-server/{id}][%d] getWashServerOK  %+v", 200, o.Payload)
}

func (o *GetWashServerOK) String() string {
	return fmt.Sprintf("[GET /wash-server/{id}][%d] getWashServerOK  %+v", 200, o.Payload)
}

func (o *GetWashServerOK) GetPayload() *models.WashServer {
	return o.Payload
}

func (o *GetWashServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WashServer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWashServerBadRequest creates a GetWashServerBadRequest with default headers values
func NewGetWashServerBadRequest() *GetWashServerBadRequest {
	return &GetWashServerBadRequest{}
}

/*
GetWashServerBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetWashServerBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wash server bad request response has a 2xx status code
func (o *GetWashServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wash server bad request response has a 3xx status code
func (o *GetWashServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash server bad request response has a 4xx status code
func (o *GetWashServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wash server bad request response has a 5xx status code
func (o *GetWashServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get wash server bad request response a status code equal to that given
func (o *GetWashServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get wash server bad request response
func (o *GetWashServerBadRequest) Code() int {
	return 400
}

func (o *GetWashServerBadRequest) Error() string {
	return fmt.Sprintf("[GET /wash-server/{id}][%d] getWashServerBadRequest  %+v", 400, o.Payload)
}

func (o *GetWashServerBadRequest) String() string {
	return fmt.Sprintf("[GET /wash-server/{id}][%d] getWashServerBadRequest  %+v", 400, o.Payload)
}

func (o *GetWashServerBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWashServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWashServerNotFound creates a GetWashServerNotFound with default headers values
func NewGetWashServerNotFound() *GetWashServerNotFound {
	return &GetWashServerNotFound{}
}

/*
GetWashServerNotFound describes a response with status code 404, with default header values.

WashServer not exists
*/
type GetWashServerNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wash server not found response has a 2xx status code
func (o *GetWashServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wash server not found response has a 3xx status code
func (o *GetWashServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash server not found response has a 4xx status code
func (o *GetWashServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get wash server not found response has a 5xx status code
func (o *GetWashServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get wash server not found response a status code equal to that given
func (o *GetWashServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get wash server not found response
func (o *GetWashServerNotFound) Code() int {
	return 404
}

func (o *GetWashServerNotFound) Error() string {
	return fmt.Sprintf("[GET /wash-server/{id}][%d] getWashServerNotFound  %+v", 404, o.Payload)
}

func (o *GetWashServerNotFound) String() string {
	return fmt.Sprintf("[GET /wash-server/{id}][%d] getWashServerNotFound  %+v", 404, o.Payload)
}

func (o *GetWashServerNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWashServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWashServerInternalServerError creates a GetWashServerInternalServerError with default headers values
func NewGetWashServerInternalServerError() *GetWashServerInternalServerError {
	return &GetWashServerInternalServerError{}
}

/*
GetWashServerInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetWashServerInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get wash server internal server error response has a 2xx status code
func (o *GetWashServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get wash server internal server error response has a 3xx status code
func (o *GetWashServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get wash server internal server error response has a 4xx status code
func (o *GetWashServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get wash server internal server error response has a 5xx status code
func (o *GetWashServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get wash server internal server error response a status code equal to that given
func (o *GetWashServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get wash server internal server error response
func (o *GetWashServerInternalServerError) Code() int {
	return 500
}

func (o *GetWashServerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /wash-server/{id}][%d] getWashServerInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWashServerInternalServerError) String() string {
	return fmt.Sprintf("[GET /wash-server/{id}][%d] getWashServerInternalServerError  %+v", 500, o.Payload)
}

func (o *GetWashServerInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWashServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
