swagger: "2.0"
info:
  description: "microservice for the sbp system of self-service car washes"
  title: wash-sbp
  version: 1.0.1
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
securityDefinitions:
  authKey:
    description: Session token inside Authorization header.
    type: apiKey
    in: header
    name: Authorization
security:
  - authKey: []

paths:
  /healthcheck:
    get:
      tags:
        - standard
      security:
        - {}
      operationId: healthcheck
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              ok:
                type: boolean
    
  /groups/{groupId}/washes/{washId}:
    post:
      tags:     
        - washes
        - groups
      operationId: assignWashToGroup
      parameters:
        - name: groupId
          in: path
          required: true
          type: string
          format: uuid
        - name: washId
          in: path
          required: true
          type: string
          format: uuid
      responses:
        204:
          description: OK
        default: {$ref: '#/responses/GenericError'}

  /washes/{id}:
    get:
      tags:
        - washes
      operationId: getWashById
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Wash"
        default: {$ref: '#/responses/GenericError'}
    patch:
      tags:
        - washes
      operationId: updateWash
      parameters:
        - $ref: '#/parameters/uuid'
        - name: body
          in: body
          schema:
            $ref: "#/definitions/WashUpdate"
      responses:
        204:
          description: Success update
        default: {$ref: '#/responses/GenericError'}
    delete:
      tags:
        - washes
      operationId: deleteWash
      parameters:
        - $ref: '#/parameters/uuid'
      responses:
        204:
          description: OK
        default: {$ref: '#/responses/GenericError'}

  /washes:
    get:
      tags:
        - washes
      operationId: getWashes
      parameters:
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
        - name: groupId
          in: query
          type: string
          format: uuid
      responses:
        200:
          description: OK
          schema:
            type: array
            items: 
              $ref: "#/definitions/Wash"
        default: {$ref: '#/responses/GenericError'}
    post:
      tags:
        - washes
      operationId: createWash
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/WashCreation"
      responses:
        200:
          description: Success creation
          schema:
            $ref: "#/definitions/Wash"
        default: {$ref: '#/responses/GenericError'}
      
  /notification:
    post:
      tags:
        - notifications
      security:
        - {}
      operationId: receiveNotification
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Notification"
      responses:
        200:
          description: OK
          schema:
            type: string
        default: {$ref: '#/responses/GenericError'}

  /payments/init:
    post:
      tags:
        - payments
      operationId: initPayment
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Payment"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PaymentResponse"
        default: {$ref: '#/responses/GenericError'}

  /payments/cancel:
    post:
      tags:
        - payments
      operationId: cancelPayment
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/PaymentCancellation"
      responses:
        200:
          description: OK
        default: {$ref: '#/responses/GenericError'}

responses:
  GenericError:
    description: Generic error response
    schema:
      $ref: '#/definitions/Error'

parameters:
  offset:
    name: offset
    in: query
    description: Number of records to skip for pagination
    required: false
    type: integer
    format: int64
    default: 0
    minimum: 0

  limit:
    name: limit
    in: query
    description: Maximum number of records to return
    required: false
    type: integer
    format: int64
    default: 100
    minimum: 1

  userRole:
    name: role
    in: query
    type: string
    enum: [systemManager, admin, noAccess]

  uuid:
    name: id
    in: path
    required: true
    type: string
    format: uuid

definitions:
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        description: Either same as HTTP Status Code OR >= 600.
        type: integer
        format: int32
      message:
        type: string

  PaymentCancellation:
    type: object
    properties:
      washID:
        type: string
      postID:
        type: string
      orderID:
        type: string

  PaymentResponse:
    type: object
    properties:
      url:
        type: string
      orderID:
        type: string

  Payment:
    type: object
    properties:
      washId:
        type: string
      postId:
        type: string
      orderId:
        type: string
      amount:
        type: integer

  Wash:
    type: object
    properties:
      id:
        type: string
      password:
        type: string
      name:
        type: string
      description:
        type: string
      terminalKey:
        type: string
      terminalPassword:
        type: string
      organizationId:
        type: string
        format: uuid
      groupId:
        type: string
        format: uuid

  WashCreation:
    properties:
      name:
        type: string
      description:
        type: string 
      terminalKey:
        type: string
      terminalPassword:
        type: string
      groupId:
        type: string
        format: uuid
    required: [name, description, terminalKey, terminalPassword, groupId]

  WashUpdate:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      terminalKey:
        type: string
      terminalPassword:
        type: string

  Notification:
    type: object
    properties:
      TerminalKey:
        type: string
        description: Terminal key
      OrderId:
        type: string
        description: Order ID
      Success:
        type: boolean
        description: Indicates whether the payment was successful
      Status:
        type: string
        description: Payment status
      PaymentId:
        type: integer
        description: Payment ID
      ErrorCode:
        type: string
        description: Error code
      Amount:
        type: integer
        description: Payment amount
      Pan:
        type: string
        description: PAN (Primary Account Number)
      Token:
        type: string
        description: Payment token
      CardId:
        type: integer
        x-nullable: true
      ExpDate:
        type: string
        x-nullable: true

  UserRole:
    type: string
    enum: [systemManager, admin, noAccess]

  User:
    type: object
    description: "User profile"
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
        format: email
      role:
        $ref: "#/definitions/UserRole"
      organization:
        type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          description:
            type: string
          displayName:
            type: string
          deleted:
            type: boolean
        x-nullable: true

  Organization:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      displayName:
        type: string

  Group:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      organizationId:
        type: string
        format: uuid