// Code generated by go-swagger; DO NOT EDIT.

package wash_servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"sbp/openapi/models"
)

// GetWashServerOKCode is the HTTP code returned for type GetWashServerOK
const GetWashServerOKCode int = 200

/*
GetWashServerOK OK

swagger:response getWashServerOK
*/
type GetWashServerOK struct {

	/*
	  In: Body
	*/
	Payload *models.WashServer `json:"body,omitempty"`
}

// NewGetWashServerOK creates GetWashServerOK with default headers values
func NewGetWashServerOK() *GetWashServerOK {

	return &GetWashServerOK{}
}

// WithPayload adds the payload to the get wash server o k response
func (o *GetWashServerOK) WithPayload(payload *models.WashServer) *GetWashServerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server o k response
func (o *GetWashServerOK) SetPayload(payload *models.WashServer) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerOK) GetWashServerResponder() {}

// GetWashServerBadRequestCode is the HTTP code returned for type GetWashServerBadRequest
const GetWashServerBadRequestCode int = 400

/*
GetWashServerBadRequest Bad request

swagger:response getWashServerBadRequest
*/
type GetWashServerBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerBadRequest creates GetWashServerBadRequest with default headers values
func NewGetWashServerBadRequest() *GetWashServerBadRequest {

	return &GetWashServerBadRequest{}
}

// WithPayload adds the payload to the get wash server bad request response
func (o *GetWashServerBadRequest) WithPayload(payload *models.Error) *GetWashServerBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server bad request response
func (o *GetWashServerBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerBadRequest) GetWashServerResponder() {}

// GetWashServerNotFoundCode is the HTTP code returned for type GetWashServerNotFound
const GetWashServerNotFoundCode int = 404

/*
GetWashServerNotFound WashServer not exists

swagger:response getWashServerNotFound
*/
type GetWashServerNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerNotFound creates GetWashServerNotFound with default headers values
func NewGetWashServerNotFound() *GetWashServerNotFound {

	return &GetWashServerNotFound{}
}

// WithPayload adds the payload to the get wash server not found response
func (o *GetWashServerNotFound) WithPayload(payload *models.Error) *GetWashServerNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server not found response
func (o *GetWashServerNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerNotFound) GetWashServerResponder() {}

// GetWashServerInternalServerErrorCode is the HTTP code returned for type GetWashServerInternalServerError
const GetWashServerInternalServerErrorCode int = 500

/*
GetWashServerInternalServerError Internal error

swagger:response getWashServerInternalServerError
*/
type GetWashServerInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashServerInternalServerError creates GetWashServerInternalServerError with default headers values
func NewGetWashServerInternalServerError() *GetWashServerInternalServerError {

	return &GetWashServerInternalServerError{}
}

// WithPayload adds the payload to the get wash server internal server error response
func (o *GetWashServerInternalServerError) WithPayload(payload *models.Error) *GetWashServerInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get wash server internal server error response
func (o *GetWashServerInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashServerInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashServerInternalServerError) GetWashServerResponder() {}

type GetWashServerNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWashServerNotImplementedResponder) GetWashServerResponder() {}

func GetWashServerNotImplemented() GetWashServerResponder {
	return &GetWashServerNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWashServer has not yet been implemented",
		),
	}
}

type GetWashServerResponder interface {
	middleware.Responder
	GetWashServerResponder()
}
