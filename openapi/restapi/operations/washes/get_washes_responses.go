// Code generated by go-swagger; DO NOT EDIT.

package washes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"sbp/openapi/models"
)

// GetWashesOKCode is the HTTP code returned for type GetWashesOK
const GetWashesOKCode int = 200

/*GetWashesOK OK

swagger:response getWashesOK
*/
type GetWashesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Wash `json:"body,omitempty"`
}

// NewGetWashesOK creates GetWashesOK with default headers values
func NewGetWashesOK() *GetWashesOK {

	return &GetWashesOK{}
}

// WithPayload adds the payload to the get washes o k response
func (o *GetWashesOK) WithPayload(payload []*models.Wash) *GetWashesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get washes o k response
func (o *GetWashesOK) SetPayload(payload []*models.Wash) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Wash, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetWashesOK) GetWashesResponder() {}

/*GetWashesDefault Generic error response

swagger:response getWashesDefault
*/
type GetWashesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWashesDefault creates GetWashesDefault with default headers values
func NewGetWashesDefault(code int) *GetWashesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWashesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get washes default response
func (o *GetWashesDefault) WithStatusCode(code int) *GetWashesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get washes default response
func (o *GetWashesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get washes default response
func (o *GetWashesDefault) WithPayload(payload *models.Error) *GetWashesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get washes default response
func (o *GetWashesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWashesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetWashesDefault) GetWashesResponder() {}

type GetWashesNotImplementedResponder struct {
	middleware.Responder
}

func (*GetWashesNotImplementedResponder) GetWashesResponder() {}

func GetWashesNotImplemented() GetWashesResponder {
	return &GetWashesNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetWashes has not yet been implemented",
		),
	}
}

type GetWashesResponder interface {
	middleware.Responder
	GetWashesResponder()
}
