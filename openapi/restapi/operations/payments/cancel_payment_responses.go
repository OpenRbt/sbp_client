// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"sbp/openapi/models"
)

// CancelPaymentOKCode is the HTTP code returned for type CancelPaymentOK
const CancelPaymentOKCode int = 200

/*
CancelPaymentOK OK

swagger:response cancelPaymentOK
*/
type CancelPaymentOK struct {
}

// NewCancelPaymentOK creates CancelPaymentOK with default headers values
func NewCancelPaymentOK() *CancelPaymentOK {

	return &CancelPaymentOK{}
}

// WriteResponse to the client
func (o *CancelPaymentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

func (o *CancelPaymentOK) CancelPaymentResponder() {}

/*
CancelPaymentDefault Generic error response

swagger:response cancelPaymentDefault
*/
type CancelPaymentDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCancelPaymentDefault creates CancelPaymentDefault with default headers values
func NewCancelPaymentDefault(code int) *CancelPaymentDefault {
	if code <= 0 {
		code = 500
	}

	return &CancelPaymentDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the cancel payment default response
func (o *CancelPaymentDefault) WithStatusCode(code int) *CancelPaymentDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the cancel payment default response
func (o *CancelPaymentDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the cancel payment default response
func (o *CancelPaymentDefault) WithPayload(payload *models.Error) *CancelPaymentDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel payment default response
func (o *CancelPaymentDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelPaymentDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *CancelPaymentDefault) CancelPaymentResponder() {}

type CancelPaymentNotImplementedResponder struct {
	middleware.Responder
}

func (*CancelPaymentNotImplementedResponder) CancelPaymentResponder() {}

func CancelPaymentNotImplemented() CancelPaymentResponder {
	return &CancelPaymentNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.CancelPayment has not yet been implemented",
		),
	}
}

type CancelPaymentResponder interface {
	middleware.Responder
	CancelPaymentResponder()
}
