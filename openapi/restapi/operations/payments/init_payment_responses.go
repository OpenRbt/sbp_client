// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"sbp/openapi/models"
)

// InitPaymentOKCode is the HTTP code returned for type InitPaymentOK
const InitPaymentOKCode int = 200

/*
InitPaymentOK OK

swagger:response initPaymentOK
*/
type InitPaymentOK struct {

	/*
	  In: Body
	*/
	Payload *models.PaymentResponse `json:"body,omitempty"`
}

// NewInitPaymentOK creates InitPaymentOK with default headers values
func NewInitPaymentOK() *InitPaymentOK {

	return &InitPaymentOK{}
}

// WithPayload adds the payload to the init payment o k response
func (o *InitPaymentOK) WithPayload(payload *models.PaymentResponse) *InitPaymentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the init payment o k response
func (o *InitPaymentOK) SetPayload(payload *models.PaymentResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InitPaymentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *InitPaymentOK) InitPaymentResponder() {}

/*
InitPaymentDefault Generic error response

swagger:response initPaymentDefault
*/
type InitPaymentDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewInitPaymentDefault creates InitPaymentDefault with default headers values
func NewInitPaymentDefault(code int) *InitPaymentDefault {
	if code <= 0 {
		code = 500
	}

	return &InitPaymentDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the init payment default response
func (o *InitPaymentDefault) WithStatusCode(code int) *InitPaymentDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the init payment default response
func (o *InitPaymentDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the init payment default response
func (o *InitPaymentDefault) WithPayload(payload *models.Error) *InitPaymentDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the init payment default response
func (o *InitPaymentDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *InitPaymentDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *InitPaymentDefault) InitPaymentResponder() {}

type InitPaymentNotImplementedResponder struct {
	middleware.Responder
}

func (*InitPaymentNotImplementedResponder) InitPaymentResponder() {}

func InitPaymentNotImplemented() InitPaymentResponder {
	return &InitPaymentNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.InitPayment has not yet been implemented",
		),
	}
}

type InitPaymentResponder interface {
	middleware.Responder
	InitPaymentResponder()
}
